// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PciUtils is an autogenerated mock type for the PciUtils type
type PciUtils struct {
	mock.Mock
}

// GetPciAddress provides a mock function with given fields: ifName, vf
func (_m *PciUtils) GetPciAddress(ifName string, vf int) (string, error) {
	ret := _m.Called(ifName, vf)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, int) string); ok {
		r0 = rf(ifName, vf)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, int) error); ok {
		r1 = rf(ifName, vf)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSriovNumVfs provides a mock function with given fields: ifName
func (_m *PciUtils) GetSriovNumVfs(ifName string) (int, error) {
	ret := _m.Called(ifName)

	var r0 int
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(ifName)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(ifName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetVFLinkNamesFromVFID provides a mock function with given fields: pfName, vfID
func (_m *PciUtils) GetVFLinkNamesFromVFID(pfName string, vfID int) ([]string, error) {
	ret := _m.Called(pfName, vfID)

	var r0 []string
	if rf, ok := ret.Get(0).(func(string, int) []string); ok {
		r0 = rf(pfName, vfID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, int) error); ok {
		r1 = rf(pfName, vfID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RebindVf provides a mock function with given fields: vfPciAddress
func (_m *PciUtils) RebindVf(vfPciAddress string) error {
	ret := _m.Called(vfPciAddress)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(vfPciAddress)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
